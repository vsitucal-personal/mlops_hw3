services:
  minio:
    image: quay.io/minio/minio
    container_name: minio
    environment:
      - MINIO_ROOT_USER=minio
      - MINIO_ROOT_PASSWORD=minio123
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data

  minio-create-bucket:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      mc alias set local http://minio:9000 minio minio123;
      mc mb local/mlflow;
      mc policy set public local/mlflow;
      exit 0;
      "

  mlflow:
    restart: always
    build: ./mlflow
    container_name: mlflow
    ports:
      - "5000:5000"
    environment:
      - MLFLOW_ARTIFACT_URI=s3://mlflow/
      - AWS_ACCESS_KEY_ID=minio
      - AWS_SECRET_ACCESS_KEY=minio123
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
    depends_on:
      - minio
    command: mlflow server --default-artifact-root s3://mlflow/ --host 0.0.0.0 --port 5000

  fastapi:
    restart: always
    build: ./fastapi
    container_name: fastapi
    ports:
      - "8000:8000"
    depends_on:
      - mlflow
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:5000
      - MLFLOW_ARTIFACT_URI=s3://mlflow/
      - AWS_ACCESS_KEY_ID=minio
      - AWS_SECRET_ACCESS_KEY=minio123
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000

  jupyterlab_instance:
    build: ./mlflow
    container_name: jupyterlab_instance
    ports:
      - "8888:8888"
    environment:
      - JUPYTER_TOKEN=easy
      - MLFLOW_TRACKING_URI=http://mlflow:5000
      - MLFLOW_ARTIFACT_URI=s3://mlflow/
      - AWS_ACCESS_KEY_ID=minio
      - AWS_SECRET_ACCESS_KEY=minio123
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
    depends_on:
      - mlflow
    command: [ "jupyter", "lab", "--ip=0.0.0.0", "--port=8888", "--no-browser"]

volumes:
  minio_data:

